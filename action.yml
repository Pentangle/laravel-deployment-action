name: Laravel Deployment Action
description: A currently opinionated github action for deploying laravel apps
author: 'SÃ©an Poynter-Smith'
branding:
  icon: 'send'
  color: 'green'

inputs:
  DEPLOY_KEY:
    description: 'Deploy Key'
    required: true
  SERVER_IP:
    description: 'SERVER_IP'
    required: true
  SERVER_PORT:
    description: 'Custom port for ssh and rsync'
    required: false
    default: 22
  SSH_USER:
    description: 'SSH user'
    required: true
  APP_NAME:
    description: 'name of the app used on the server'
    required: true
  APP_PATH:
    description: 'Path to the app'
    required: false
  COMPOSER_COMMAND:
    description: 'composer command - defaults to "composer install --no-progress --optimize-autoloader"'
    required: false
    default: composer install --no-progress --optimize-autoloader
  BUILD_COMMAND:
    description: 'npm build command - defaults to "npm run dev"'
    required: true
  ARTISAN_COMMANDS:
    description: 'Commands to run after build on remote server from the APP_PATH directory'
    required: false
  PHP_VERSION:
    description: 'Which version of PHP to use'
    required: false
    default: '8.0'

runs:
  using: "composite"
  steps:
    - name: Setup PHP ${{ inputs.PHP_VERSION }} with PECL extension
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.PHP_VERSION }}

    - name: Set the APP_PATH environment variable
      id: step_one
      if: ${{ inputs.APP_PATH == '' }}
      shell: bash
      run: |
        echo "APP_PATH=/srv/users/${{inputs.SSH_USER}}/apps/${{inputs.APP_NAME}}" >> $GITHUB_ENV
        
    - name: Use the value
      id: step_two
      shell: bash
      run: |
        echo "${{ inputs.APP_PATH || env.APP_PATH }}" # This will output the path

    - name: Npm File Exists
      id: check_npm_file
      uses: andstor/file-existence-action@v1.1.0
      with:
        files: "package.json"
        allow_failure: false

    - name: Composer File Exists
      id: check_composer_file
      uses: andstor/file-existence-action@v1.1.0
      with:
        files: "composer.json"
        allow_failure: false

    - name: Cache Composer dependencies
      if: steps.check_composer_file.outputs.files_exists == 'true'
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: /tmp/composer-cache
        key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}-v2

    - name: Install dependencies
      if: steps.check_composer_file.outputs.files_exists == 'true' && steps.composer-cache.outputs.cache-hit != 'true'
      shell: bash
      run: ${{ inputs.COMPOSER_COMMAND }}

    - name: Setup Node.js 16.14
      if: steps.check_npm_file.outputs.files_exists == 'true'
      uses: actions/setup-node@v2
      with:
        node-version: 16.14

    - name: Cache Node Modules
      if: steps.check_npm_file.outputs.files_exists == 'true' && steps.node-cache.outputs.cache-hit != 'true'
      id: node-cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}-v2

    - name: Install Dependencies
      if: steps.check_npm_file.outputs.files_exists == 'true' && steps.node-cache.outputs.cache-hit != 'true'
      shell: bash
      run: npm ci

    - name: NPM Build
      if: steps.check_npm_file.outputs.files_exists == 'true'
      shell: bash
      run: ${{ inputs.BUILD_COMMAND }}

    - name: Sync
      env:
        dest: ${{inputs.SSH_USER}}@${{inputs.SERVER_IP}}:${{inputs.APP_PATH || env.APP_PATH}}
      shell: bash
      run: |
        echo "${{inputs.DEPLOY_KEY}}" > deploy_key
        chmod 600 ./deploy_key
        rsync -vzr --stats --checksum \
          -e 'ssh -i ./deploy_key -o StrictHostKeyChecking=no -p ${{inputs.SERVER_PORT || 22}}' \
          --exclude /deploy_key \
          --exclude /.git/ \
          --exclude /.github/ \
          --exclude /node_modules/ \
          ./ ${{env.dest}}

    - name: multiple command
      uses: appleboy/ssh-action@master
      with:
        host: ${{ inputs.SERVER_IP }}
        username: ${{inputs.SSH_USER}}
        key: ${{ inputs.DEPLOY_KEY }}
        script: |
          cd ${{ inputs.APP_PATH || env.APP_PATH }}
          ${{ inputs.ARTISAN_COMMANDS }}

